#!/usr/bin/env bash

set -e

# ======================================== #

# Colors for output
NC='\033[0m'
RED='\033[0;31m'
CYAN='\033[1;36m'
GREEN='\033[0;32m'

# ======================================== #

# Usage hint in case of wrong invocation.
if [ $# -ne 1 ] ; then
    echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Usage: ./build.sh [path-for-example-app] ${NC}"
    exit 1
fi

APP_PATH=$1

# ======================================== #

# Directories and paths of interest for the script.
EXAMPLE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR="$(dirname "$EXAMPLE_DIR")"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Create directory on given path if it doesn't exist ... ${NC}"
mkdir -p ${APP_PATH}
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Done! ${NC}"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Create new Cocos2d-x app ... ${NC}"
cocos new -l cpp -p com.adjust.examples -d ${APP_PATH} AdjustExample
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Done! ${NC}"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Remove autogenerated classes ... ${NC}"
rm -rfv ${APP_PATH}/AdjustExample/Classes/*
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Done! ${NC}"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Use Adjust example app classes instead ... ${NC}"
cp -Rv ${EXAMPLE_DIR}/Classes/* ${APP_PATH}/AdjustExample/Classes
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Done! ${NC}"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} For Android: ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Follow the README instructions for modifying the Android.mk file. ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Follow the README instructions for adding the necessary permissions to AndroidManifest.xml file. ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Run \`scripts/build.sh\` script with providing your newly generated example app path. That should copy the necessary files to the examples app. ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Build your app [cocos build -p android]."
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Run Android Studio and open the project located in \`proj.android\` to interact with the project. ${NC}"
echo
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} For iOS: ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Follow README instructions to add the generated framework in \`./iOS\` directory to 'Build Phases'. Make sure to tick the box that says \"Copy files if necessary\" ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Run \`scripts/build.sh\` script with providing your newly generated example app path. That should copy the necessary files to the examples app. ${NC}"
echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} - Run Xcode and open the project located in \`proj.ios-mac\` to interact with the project. ${NC}"

# ======================================== #

echo -e "${CYAN}[ADJUST][EXAMPLE-APP][BUILD]:${GREEN} Script completed! ${NC}"
